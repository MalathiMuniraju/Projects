{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import packages\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import sklearn\n",
    "import seaborn as sns\n",
    "from sklearn.cross_validation import train_test_split\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Print many statements at same time using the below command\n",
    "from IPython.core.interactiveshell import InteractiveShell\n",
    "InteractiveShell.ast_node_interactivity='all'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model</th>\n",
       "      <th>Actual_MPG</th>\n",
       "      <th>Cylinders</th>\n",
       "      <th>Engine_Disp</th>\n",
       "      <th>Horsepower</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Accelerate</th>\n",
       "      <th>Year</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>amc ambassador dpl</td>\n",
       "      <td>15.0</td>\n",
       "      <td>8</td>\n",
       "      <td>390.0</td>\n",
       "      <td>190</td>\n",
       "      <td>3850</td>\n",
       "      <td>8.5</td>\n",
       "      <td>70</td>\n",
       "      <td>American</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>amc gremlin</td>\n",
       "      <td>21.0</td>\n",
       "      <td>6</td>\n",
       "      <td>199.0</td>\n",
       "      <td>90</td>\n",
       "      <td>2648</td>\n",
       "      <td>15.0</td>\n",
       "      <td>70</td>\n",
       "      <td>American</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>amc hornet</td>\n",
       "      <td>18.0</td>\n",
       "      <td>6</td>\n",
       "      <td>199.0</td>\n",
       "      <td>97</td>\n",
       "      <td>2774</td>\n",
       "      <td>15.5</td>\n",
       "      <td>70</td>\n",
       "      <td>American</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>amc rebel sst</td>\n",
       "      <td>16.0</td>\n",
       "      <td>8</td>\n",
       "      <td>304.0</td>\n",
       "      <td>150</td>\n",
       "      <td>3433</td>\n",
       "      <td>12.0</td>\n",
       "      <td>70</td>\n",
       "      <td>American</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>buick estate wagon (sw)</td>\n",
       "      <td>14.0</td>\n",
       "      <td>8</td>\n",
       "      <td>455.0</td>\n",
       "      <td>225</td>\n",
       "      <td>3086</td>\n",
       "      <td>10.0</td>\n",
       "      <td>70</td>\n",
       "      <td>American</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Model  Actual_MPG  Cylinders  Engine_Disp  Horsepower  \\\n",
       "0       amc ambassador dpl        15.0          8        390.0         190   \n",
       "1              amc gremlin        21.0          6        199.0          90   \n",
       "2               amc hornet        18.0          6        199.0          97   \n",
       "3            amc rebel sst        16.0          8        304.0         150   \n",
       "4  buick estate wagon (sw)        14.0          8        455.0         225   \n",
       "\n",
       "   Weight  Accelerate  Year    Origin  \n",
       "0    3850         8.5    70  American  \n",
       "1    2648        15.0    70  American  \n",
       "2    2774        15.5    70  American  \n",
       "3    3433        12.0    70  American  \n",
       "4    3086        10.0    70  American  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model</th>\n",
       "      <th>Actual_MPG</th>\n",
       "      <th>Cylinders</th>\n",
       "      <th>Engine_Disp</th>\n",
       "      <th>Horsepower</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Accelerate</th>\n",
       "      <th>Year</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>387</th>\n",
       "      <td>mazda glc custom</td>\n",
       "      <td>31.0</td>\n",
       "      <td>4</td>\n",
       "      <td>91.0</td>\n",
       "      <td>68</td>\n",
       "      <td>1970</td>\n",
       "      <td>17.6</td>\n",
       "      <td>82</td>\n",
       "      <td>Japanese</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>388</th>\n",
       "      <td>mazda glc custom l</td>\n",
       "      <td>37.0</td>\n",
       "      <td>4</td>\n",
       "      <td>91.0</td>\n",
       "      <td>68</td>\n",
       "      <td>2025</td>\n",
       "      <td>18.2</td>\n",
       "      <td>82</td>\n",
       "      <td>Japanese</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>389</th>\n",
       "      <td>nissan stanza xe</td>\n",
       "      <td>36.0</td>\n",
       "      <td>4</td>\n",
       "      <td>120.0</td>\n",
       "      <td>88</td>\n",
       "      <td>2160</td>\n",
       "      <td>14.5</td>\n",
       "      <td>82</td>\n",
       "      <td>Japanese</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>390</th>\n",
       "      <td>toyota celica gt</td>\n",
       "      <td>32.0</td>\n",
       "      <td>4</td>\n",
       "      <td>144.0</td>\n",
       "      <td>96</td>\n",
       "      <td>2665</td>\n",
       "      <td>13.9</td>\n",
       "      <td>82</td>\n",
       "      <td>Japanese</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>391</th>\n",
       "      <td>toyota corolla</td>\n",
       "      <td>34.0</td>\n",
       "      <td>4</td>\n",
       "      <td>108.0</td>\n",
       "      <td>70</td>\n",
       "      <td>2245</td>\n",
       "      <td>16.9</td>\n",
       "      <td>82</td>\n",
       "      <td>Japanese</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Model  Actual_MPG  Cylinders  Engine_Disp  Horsepower  \\\n",
       "387    mazda glc custom        31.0          4         91.0          68   \n",
       "388  mazda glc custom l        37.0          4         91.0          68   \n",
       "389    nissan stanza xe        36.0          4        120.0          88   \n",
       "390    toyota celica gt        32.0          4        144.0          96   \n",
       "391      toyota corolla        34.0          4        108.0          70   \n",
       "\n",
       "     Weight  Accelerate  Year    Origin  \n",
       "387    1970        17.6    82  Japanese  \n",
       "388    2025        18.2    82  Japanese  \n",
       "389    2160        14.5    82  Japanese  \n",
       "390    2665        13.9    82  Japanese  \n",
       "391    2245        16.9    82  Japanese  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import datset and create a dataframe\n",
    "cars=pd.read_csv(\"C:\\\\Users\\\\Ravi Kumar KM\\\\Downloads\\\\New folder\\\\cars.csv\")\n",
    "type(cars)\n",
    "cars.head()\n",
    "cars.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Actual_MPG</th>\n",
       "      <th>Cylinders</th>\n",
       "      <th>Engine_Disp</th>\n",
       "      <th>Horsepower</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Accelerate</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>392.000000</td>\n",
       "      <td>392.000000</td>\n",
       "      <td>392.000000</td>\n",
       "      <td>392.000000</td>\n",
       "      <td>392.000000</td>\n",
       "      <td>392.000000</td>\n",
       "      <td>392.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>23.445918</td>\n",
       "      <td>5.471939</td>\n",
       "      <td>194.411990</td>\n",
       "      <td>104.469388</td>\n",
       "      <td>2977.584184</td>\n",
       "      <td>15.541327</td>\n",
       "      <td>75.979592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>7.805007</td>\n",
       "      <td>1.705783</td>\n",
       "      <td>104.644004</td>\n",
       "      <td>38.491160</td>\n",
       "      <td>849.402560</td>\n",
       "      <td>2.758864</td>\n",
       "      <td>3.683737</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>9.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>68.000000</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>1613.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>70.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>17.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>105.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>2225.250000</td>\n",
       "      <td>13.775000</td>\n",
       "      <td>73.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>22.750000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>151.000000</td>\n",
       "      <td>93.500000</td>\n",
       "      <td>2803.500000</td>\n",
       "      <td>15.500000</td>\n",
       "      <td>76.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>29.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>275.750000</td>\n",
       "      <td>126.000000</td>\n",
       "      <td>3614.750000</td>\n",
       "      <td>17.025000</td>\n",
       "      <td>79.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>46.600000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>455.000000</td>\n",
       "      <td>230.000000</td>\n",
       "      <td>5140.000000</td>\n",
       "      <td>24.800000</td>\n",
       "      <td>82.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Actual_MPG   Cylinders  Engine_Disp  Horsepower       Weight  \\\n",
       "count  392.000000  392.000000   392.000000  392.000000   392.000000   \n",
       "mean    23.445918    5.471939   194.411990  104.469388  2977.584184   \n",
       "std      7.805007    1.705783   104.644004   38.491160   849.402560   \n",
       "min      9.000000    3.000000    68.000000   46.000000  1613.000000   \n",
       "25%     17.000000    4.000000   105.000000   75.000000  2225.250000   \n",
       "50%     22.750000    4.000000   151.000000   93.500000  2803.500000   \n",
       "75%     29.000000    8.000000   275.750000  126.000000  3614.750000   \n",
       "max     46.600000    8.000000   455.000000  230.000000  5140.000000   \n",
       "\n",
       "       Accelerate        Year  \n",
       "count  392.000000  392.000000  \n",
       "mean    15.541327   75.979592  \n",
       "std      2.758864    3.683737  \n",
       "min      8.000000   70.000000  \n",
       "25%     13.775000   73.000000  \n",
       "50%     15.500000   76.000000  \n",
       "75%     17.025000   79.000000  \n",
       "max     24.800000   82.000000  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Actual_MPG</th>\n",
       "      <th>Cylinders</th>\n",
       "      <th>Engine_Disp</th>\n",
       "      <th>Horsepower</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Accelerate</th>\n",
       "      <th>Year</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>15.0</td>\n",
       "      <td>8</td>\n",
       "      <td>390.0</td>\n",
       "      <td>190</td>\n",
       "      <td>3850</td>\n",
       "      <td>8.5</td>\n",
       "      <td>70</td>\n",
       "      <td>American</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21.0</td>\n",
       "      <td>6</td>\n",
       "      <td>199.0</td>\n",
       "      <td>90</td>\n",
       "      <td>2648</td>\n",
       "      <td>15.0</td>\n",
       "      <td>70</td>\n",
       "      <td>American</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18.0</td>\n",
       "      <td>6</td>\n",
       "      <td>199.0</td>\n",
       "      <td>97</td>\n",
       "      <td>2774</td>\n",
       "      <td>15.5</td>\n",
       "      <td>70</td>\n",
       "      <td>American</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>16.0</td>\n",
       "      <td>8</td>\n",
       "      <td>304.0</td>\n",
       "      <td>150</td>\n",
       "      <td>3433</td>\n",
       "      <td>12.0</td>\n",
       "      <td>70</td>\n",
       "      <td>American</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>14.0</td>\n",
       "      <td>8</td>\n",
       "      <td>455.0</td>\n",
       "      <td>225</td>\n",
       "      <td>3086</td>\n",
       "      <td>10.0</td>\n",
       "      <td>70</td>\n",
       "      <td>American</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Actual_MPG  Cylinders  Engine_Disp  Horsepower  Weight  Accelerate  Year  \\\n",
       "0        15.0          8        390.0         190    3850         8.5    70   \n",
       "1        21.0          6        199.0          90    2648        15.0    70   \n",
       "2        18.0          6        199.0          97    2774        15.5    70   \n",
       "3        16.0          8        304.0         150    3433        12.0    70   \n",
       "4        14.0          8        455.0         225    3086        10.0    70   \n",
       "\n",
       "     Origin  \n",
       "0  American  \n",
       "1  American  \n",
       "2  American  \n",
       "3  American  \n",
       "4  American  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars1=cars.drop('Model',axis=1)\n",
    "cars1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dummy coding cars\n",
    "for col in cars1.columns:\n",
    "    if cars1[col].dtype=='object':\n",
    "        cars1[col]=pd.Categorical(cars1[col]).codes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Actual_MPG</th>\n",
       "      <th>Cylinders</th>\n",
       "      <th>Engine_Disp</th>\n",
       "      <th>Horsepower</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Accelerate</th>\n",
       "      <th>Year</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>15.0</td>\n",
       "      <td>8</td>\n",
       "      <td>390.0</td>\n",
       "      <td>190</td>\n",
       "      <td>3850</td>\n",
       "      <td>8.5</td>\n",
       "      <td>70</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21.0</td>\n",
       "      <td>6</td>\n",
       "      <td>199.0</td>\n",
       "      <td>90</td>\n",
       "      <td>2648</td>\n",
       "      <td>15.0</td>\n",
       "      <td>70</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18.0</td>\n",
       "      <td>6</td>\n",
       "      <td>199.0</td>\n",
       "      <td>97</td>\n",
       "      <td>2774</td>\n",
       "      <td>15.5</td>\n",
       "      <td>70</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>16.0</td>\n",
       "      <td>8</td>\n",
       "      <td>304.0</td>\n",
       "      <td>150</td>\n",
       "      <td>3433</td>\n",
       "      <td>12.0</td>\n",
       "      <td>70</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>14.0</td>\n",
       "      <td>8</td>\n",
       "      <td>455.0</td>\n",
       "      <td>225</td>\n",
       "      <td>3086</td>\n",
       "      <td>10.0</td>\n",
       "      <td>70</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Actual_MPG  Cylinders  Engine_Disp  Horsepower  Weight  Accelerate  Year  \\\n",
       "0        15.0          8        390.0         190    3850         8.5    70   \n",
       "1        21.0          6        199.0          90    2648        15.0    70   \n",
       "2        18.0          6        199.0          97    2774        15.5    70   \n",
       "3        16.0          8        304.0         150    3433        12.0    70   \n",
       "4        14.0          8        455.0         225    3086        10.0    70   \n",
       "\n",
       "   Origin  \n",
       "0       0  \n",
       "1       0  \n",
       "2       0  \n",
       "3       0  \n",
       "4       0  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Actual_MPG</th>\n",
       "      <th>Cylinders</th>\n",
       "      <th>Engine_Disp</th>\n",
       "      <th>Horsepower</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Accelerate</th>\n",
       "      <th>Year</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Actual_MPG</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.777618</td>\n",
       "      <td>-0.805127</td>\n",
       "      <td>-0.778427</td>\n",
       "      <td>-0.832244</td>\n",
       "      <td>0.423329</td>\n",
       "      <td>0.580541</td>\n",
       "      <td>0.565209</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cylinders</th>\n",
       "      <td>-0.777618</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.950823</td>\n",
       "      <td>0.842983</td>\n",
       "      <td>0.897527</td>\n",
       "      <td>-0.504683</td>\n",
       "      <td>-0.345647</td>\n",
       "      <td>-0.568932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Engine_Disp</th>\n",
       "      <td>-0.805127</td>\n",
       "      <td>0.950823</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.897257</td>\n",
       "      <td>0.932994</td>\n",
       "      <td>-0.543800</td>\n",
       "      <td>-0.369855</td>\n",
       "      <td>-0.614535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Horsepower</th>\n",
       "      <td>-0.778427</td>\n",
       "      <td>0.842983</td>\n",
       "      <td>0.897257</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.864538</td>\n",
       "      <td>-0.689196</td>\n",
       "      <td>-0.416361</td>\n",
       "      <td>-0.455171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Weight</th>\n",
       "      <td>-0.832244</td>\n",
       "      <td>0.897527</td>\n",
       "      <td>0.932994</td>\n",
       "      <td>0.864538</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.416839</td>\n",
       "      <td>-0.309120</td>\n",
       "      <td>-0.585005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Accelerate</th>\n",
       "      <td>0.423329</td>\n",
       "      <td>-0.504683</td>\n",
       "      <td>-0.543800</td>\n",
       "      <td>-0.689196</td>\n",
       "      <td>-0.416839</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.290316</td>\n",
       "      <td>0.212746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Year</th>\n",
       "      <td>0.580541</td>\n",
       "      <td>-0.345647</td>\n",
       "      <td>-0.369855</td>\n",
       "      <td>-0.416361</td>\n",
       "      <td>-0.309120</td>\n",
       "      <td>0.290316</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.181528</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Origin</th>\n",
       "      <td>0.565209</td>\n",
       "      <td>-0.568932</td>\n",
       "      <td>-0.614535</td>\n",
       "      <td>-0.455171</td>\n",
       "      <td>-0.585005</td>\n",
       "      <td>0.212746</td>\n",
       "      <td>0.181528</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Actual_MPG  Cylinders  Engine_Disp  Horsepower    Weight  \\\n",
       "Actual_MPG     1.000000  -0.777618    -0.805127   -0.778427 -0.832244   \n",
       "Cylinders     -0.777618   1.000000     0.950823    0.842983  0.897527   \n",
       "Engine_Disp   -0.805127   0.950823     1.000000    0.897257  0.932994   \n",
       "Horsepower    -0.778427   0.842983     0.897257    1.000000  0.864538   \n",
       "Weight        -0.832244   0.897527     0.932994    0.864538  1.000000   \n",
       "Accelerate     0.423329  -0.504683    -0.543800   -0.689196 -0.416839   \n",
       "Year           0.580541  -0.345647    -0.369855   -0.416361 -0.309120   \n",
       "Origin         0.565209  -0.568932    -0.614535   -0.455171 -0.585005   \n",
       "\n",
       "             Accelerate      Year    Origin  \n",
       "Actual_MPG     0.423329  0.580541  0.565209  \n",
       "Cylinders     -0.504683 -0.345647 -0.568932  \n",
       "Engine_Disp   -0.543800 -0.369855 -0.614535  \n",
       "Horsepower    -0.689196 -0.416361 -0.455171  \n",
       "Weight        -0.416839 -0.309120 -0.585005  \n",
       "Accelerate     1.000000  0.290316  0.212746  \n",
       "Year           0.290316  1.000000  0.181528  \n",
       "Origin         0.212746  0.181528  1.000000  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#correlation Matrix\n",
    "x=cars1.corr()\n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1440 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(figsize=(20,20))\n",
    "sns.heatmap(x,cmap='RdYlGn',annot=True)\n",
    "plt.show();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Actual_MPG</th>\n",
       "      <th>Cylinders</th>\n",
       "      <th>Engine_Disp</th>\n",
       "      <th>Horsepower</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Accelerate</th>\n",
       "      <th>Year</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.159574</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.832041</td>\n",
       "      <td>0.782609</td>\n",
       "      <td>0.634250</td>\n",
       "      <td>0.029762</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.319149</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.338501</td>\n",
       "      <td>0.239130</td>\n",
       "      <td>0.293451</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.239362</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.338501</td>\n",
       "      <td>0.277174</td>\n",
       "      <td>0.329175</td>\n",
       "      <td>0.446429</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.186170</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.609819</td>\n",
       "      <td>0.565217</td>\n",
       "      <td>0.516019</td>\n",
       "      <td>0.238095</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.132979</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.972826</td>\n",
       "      <td>0.417635</td>\n",
       "      <td>0.119048</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Actual_MPG  Cylinders  Engine_Disp  Horsepower    Weight  Accelerate  Year  \\\n",
       "0    0.159574        1.0     0.832041    0.782609  0.634250    0.029762   0.0   \n",
       "1    0.319149        0.6     0.338501    0.239130  0.293451    0.416667   0.0   \n",
       "2    0.239362        0.6     0.338501    0.277174  0.329175    0.446429   0.0   \n",
       "3    0.186170        1.0     0.609819    0.565217  0.516019    0.238095   0.0   \n",
       "4    0.132979        1.0     1.000000    0.972826  0.417635    0.119048   0.0   \n",
       "\n",
       "   Origin  \n",
       "0     0.0  \n",
       "1     0.0  \n",
       "2     0.0  \n",
       "3     0.0  \n",
       "4     0.0  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Scale all values between 0 to 1\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "scld=MinMaxScaler(feature_range=(0,1))\n",
    "arr_scld=scld.fit_transform(cars1)\n",
    "cars1_scld=pd.DataFrame(arr_scld,columns=cars1.columns)\n",
    "cars1_scld.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cylinders</th>\n",
       "      <th>Engine_Disp</th>\n",
       "      <th>Horsepower</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Accelerate</th>\n",
       "      <th>Year</th>\n",
       "      <th>Origin</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.832041</td>\n",
       "      <td>0.782609</td>\n",
       "      <td>0.634250</td>\n",
       "      <td>0.029762</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.338501</td>\n",
       "      <td>0.239130</td>\n",
       "      <td>0.293451</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.338501</td>\n",
       "      <td>0.277174</td>\n",
       "      <td>0.329175</td>\n",
       "      <td>0.446429</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.609819</td>\n",
       "      <td>0.565217</td>\n",
       "      <td>0.516019</td>\n",
       "      <td>0.238095</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.972826</td>\n",
       "      <td>0.417635</td>\n",
       "      <td>0.119048</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Cylinders  Engine_Disp  Horsepower    Weight  Accelerate  Year  Origin\n",
       "0        1.0     0.832041    0.782609  0.634250    0.029762   0.0     0.0\n",
       "1        0.6     0.338501    0.239130  0.293451    0.416667   0.0     0.0\n",
       "2        0.6     0.338501    0.277174  0.329175    0.446429   0.0     0.0\n",
       "3        1.0     0.609819    0.565217  0.516019    0.238095   0.0     0.0\n",
       "4        1.0     1.000000    0.972826  0.417635    0.119048   0.0     0.0"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "0    0.159574\n",
       "1    0.319149\n",
       "2    0.239362\n",
       "3    0.186170\n",
       "4    0.132979\n",
       "Name: Actual_MPG, dtype: float64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Create features and labels on the normalized data\n",
    "x = cars1_scld.drop('Actual_MPG',axis=1)\n",
    "y = cars1_scld['Actual_MPG']\n",
    "x.head()\n",
    "y.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(254, 7)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(138, 7)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(254,)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(138,)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Creating Features and Labels and running correlation Heat map\n",
    "# create train and test data with 75% and 25% split\n",
    "train_x,test_x,train_y,test_y=train_test_split(x,y,test_size=0.35,random_state=1)\n",
    "train_x.shape\n",
    "test_x.shape\n",
    "train_y.shape\n",
    "test_y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=1, normalize=False)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#let's import the regression object and define model\n",
    "from sklearn.linear_model import LinearRegression\n",
    "lm=LinearRegression()\n",
    "lm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=1, normalize=False)"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Fir a model into train data\n",
    "lm.fit(train_x,train_y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Evaluate the model\n",
    "predict_test=lm.predict(test_x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RSquare Value for TEST data is-\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "83.0"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RSquare Value for TRAIN data is-\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "81.0"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#R2 Value\n",
    "print(\"RSquare Value for TEST data is-\")\n",
    "np.round(lm.score(test_x,test_y)*100,0)\n",
    "print(\"RSquare Value for TRAIN data is-\")\n",
    "np.round(lm.score(train_x,train_y)*100,0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Predict on test and training data\n",
    "predict_test=lm.predict(test_x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Square Error(MSE)for TEST data is\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0.0"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Print the loss Function-MSE\n",
    "import numpy as np\n",
    "from sklearn import metrics\n",
    "print (\"Mean Square Error(MSE)for TEST data is\")\n",
    "np.round(metrics.mean_squared_error(test_y,predict_test),0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error(MAE) for TEST data is\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0.0"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.metrics import mean_absolute_error\n",
    "print(\"Mean Absolute Error(MAE) for TEST data is\")\n",
    "np.round(mean_absolute_error(test_y,predict_test),0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cylinders</th>\n",
       "      <th>Engine_Disp</th>\n",
       "      <th>Horsepower</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Accelerate</th>\n",
       "      <th>Year</th>\n",
       "      <th>Origin</th>\n",
       "      <th>Actual_MPG</th>\n",
       "      <th>Predicted</th>\n",
       "      <th>Prediction_Error</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.074935</td>\n",
       "      <td>0.228261</td>\n",
       "      <td>0.138078</td>\n",
       "      <td>0.505952</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.478723</td>\n",
       "      <td>0.5</td>\n",
       "      <td>-0.021277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.405685</td>\n",
       "      <td>0.266304</td>\n",
       "      <td>0.615821</td>\n",
       "      <td>0.654762</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.239362</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0.039362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>351</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.043928</td>\n",
       "      <td>0.103261</td>\n",
       "      <td>0.102637</td>\n",
       "      <td>0.678571</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.744681</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.044681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.136951</td>\n",
       "      <td>0.358696</td>\n",
       "      <td>0.355826</td>\n",
       "      <td>0.446429</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.265957</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.034043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.113695</td>\n",
       "      <td>0.211957</td>\n",
       "      <td>0.272753</td>\n",
       "      <td>0.488095</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.585106</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.085106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.201550</td>\n",
       "      <td>0.277174</td>\n",
       "      <td>0.340800</td>\n",
       "      <td>0.386905</td>\n",
       "      <td>0.583333</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.345745</td>\n",
       "      <td>0.5</td>\n",
       "      <td>-0.154255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.136951</td>\n",
       "      <td>0.358696</td>\n",
       "      <td>0.374256</td>\n",
       "      <td>0.386905</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.239362</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.060638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.728682</td>\n",
       "      <td>0.538043</td>\n",
       "      <td>0.673377</td>\n",
       "      <td>0.297619</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.106383</td>\n",
       "      <td>0.2</td>\n",
       "      <td>-0.093617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.005168</td>\n",
       "      <td>0.277174</td>\n",
       "      <td>0.203289</td>\n",
       "      <td>0.327381</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.265957</td>\n",
       "      <td>0.4</td>\n",
       "      <td>-0.134043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>333</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.170543</td>\n",
       "      <td>0.239130</td>\n",
       "      <td>0.311313</td>\n",
       "      <td>0.446429</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.553191</td>\n",
       "      <td>0.6</td>\n",
       "      <td>-0.046809</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>278</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.423773</td>\n",
       "      <td>0.239130</td>\n",
       "      <td>0.468387</td>\n",
       "      <td>0.607143</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.297872</td>\n",
       "      <td>0.4</td>\n",
       "      <td>-0.102128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>307</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.214470</td>\n",
       "      <td>0.239130</td>\n",
       "      <td>0.394103</td>\n",
       "      <td>0.720238</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.406915</td>\n",
       "      <td>0.5</td>\n",
       "      <td>-0.093085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>283</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.612403</td>\n",
       "      <td>0.456522</td>\n",
       "      <td>0.631415</td>\n",
       "      <td>0.440476</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.212766</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.087234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>218</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.470284</td>\n",
       "      <td>0.347826</td>\n",
       "      <td>0.540686</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.583333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.226064</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.073936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>366</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.113695</td>\n",
       "      <td>0.228261</td>\n",
       "      <td>0.291182</td>\n",
       "      <td>0.630952</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.478723</td>\n",
       "      <td>0.5</td>\n",
       "      <td>-0.021277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.972826</td>\n",
       "      <td>0.417635</td>\n",
       "      <td>0.119048</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.132979</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.167021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>385</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.059432</td>\n",
       "      <td>0.114130</td>\n",
       "      <td>0.099802</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.771277</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.071277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>324</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.131783</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.232776</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.744681</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.144681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.617571</td>\n",
       "      <td>0.456522</td>\n",
       "      <td>0.536150</td>\n",
       "      <td>0.238095</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.239362</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0.039362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.405685</td>\n",
       "      <td>0.266304</td>\n",
       "      <td>0.468103</td>\n",
       "      <td>0.476190</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.265957</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.034043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.134367</td>\n",
       "      <td>0.277174</td>\n",
       "      <td>0.248370</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.398936</td>\n",
       "      <td>0.5</td>\n",
       "      <td>-0.101064</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.645995</td>\n",
       "      <td>0.565217</td>\n",
       "      <td>0.806351</td>\n",
       "      <td>0.327381</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.132979</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.032979</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.103359</td>\n",
       "      <td>0.260870</td>\n",
       "      <td>0.217182</td>\n",
       "      <td>0.505952</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.345745</td>\n",
       "      <td>0.5</td>\n",
       "      <td>-0.154255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>228</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.139535</td>\n",
       "      <td>0.271739</td>\n",
       "      <td>0.194783</td>\n",
       "      <td>0.446429</td>\n",
       "      <td>0.583333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.438830</td>\n",
       "      <td>0.5</td>\n",
       "      <td>-0.061170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.728682</td>\n",
       "      <td>0.646739</td>\n",
       "      <td>0.589736</td>\n",
       "      <td>0.208333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.159574</td>\n",
       "      <td>0.2</td>\n",
       "      <td>-0.040426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>290</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.731266</td>\n",
       "      <td>0.521739</td>\n",
       "      <td>0.692090</td>\n",
       "      <td>0.375000</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.172872</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.127128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.111111</td>\n",
       "      <td>0.184783</td>\n",
       "      <td>0.153672</td>\n",
       "      <td>0.404762</td>\n",
       "      <td>0.583333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.558511</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.058511</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.341085</td>\n",
       "      <td>0.190217</td>\n",
       "      <td>0.396654</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.398936</td>\n",
       "      <td>0.4</td>\n",
       "      <td>-0.001064</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>162</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.186047</td>\n",
       "      <td>0.201087</td>\n",
       "      <td>0.290899</td>\n",
       "      <td>0.535714</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.372340</td>\n",
       "      <td>0.4</td>\n",
       "      <td>-0.027660</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>338</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.227390</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.285512</td>\n",
       "      <td>0.380952</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.446809</td>\n",
       "      <td>0.5</td>\n",
       "      <td>-0.053191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.470284</td>\n",
       "      <td>0.228261</td>\n",
       "      <td>0.432662</td>\n",
       "      <td>0.386905</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.239362</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.060638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>159</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.731266</td>\n",
       "      <td>0.554348</td>\n",
       "      <td>0.863056</td>\n",
       "      <td>0.327381</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.132979</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.032979</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>301</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.059432</td>\n",
       "      <td>0.125000</td>\n",
       "      <td>0.146583</td>\n",
       "      <td>0.398810</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.752660</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.152660</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>355</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.134367</td>\n",
       "      <td>0.152174</td>\n",
       "      <td>0.289765</td>\n",
       "      <td>0.613095</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.601064</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.001064</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.173127</td>\n",
       "      <td>0.206522</td>\n",
       "      <td>0.248653</td>\n",
       "      <td>0.458333</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.484043</td>\n",
       "      <td>0.5</td>\n",
       "      <td>-0.015957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.617571</td>\n",
       "      <td>0.456522</td>\n",
       "      <td>0.704565</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.106383</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.006383</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.754522</td>\n",
       "      <td>0.918478</td>\n",
       "      <td>0.851148</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.026596</td>\n",
       "      <td>-0.0</td>\n",
       "      <td>0.026596</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>303</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.188630</td>\n",
       "      <td>0.135870</td>\n",
       "      <td>0.447122</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.484043</td>\n",
       "      <td>0.4</td>\n",
       "      <td>0.084043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>163</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.266150</td>\n",
       "      <td>0.277174</td>\n",
       "      <td>0.388716</td>\n",
       "      <td>0.386905</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.239362</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.060638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.857881</td>\n",
       "      <td>0.565217</td>\n",
       "      <td>0.959456</td>\n",
       "      <td>0.357143</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.053191</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.053191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>332</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.054264</td>\n",
       "      <td>0.076087</td>\n",
       "      <td>0.100652</td>\n",
       "      <td>0.642857</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.773936</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.073936</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>391</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.103359</td>\n",
       "      <td>0.130435</td>\n",
       "      <td>0.179189</td>\n",
       "      <td>0.529762</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.664894</td>\n",
       "      <td>0.7</td>\n",
       "      <td>-0.035106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>388</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.059432</td>\n",
       "      <td>0.119565</td>\n",
       "      <td>0.116813</td>\n",
       "      <td>0.607143</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.744681</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.044681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.423773</td>\n",
       "      <td>0.293478</td>\n",
       "      <td>0.289481</td>\n",
       "      <td>0.297619</td>\n",
       "      <td>0.083333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.265957</td>\n",
       "      <td>0.4</td>\n",
       "      <td>-0.134043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>273</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.077519</td>\n",
       "      <td>0.119565</td>\n",
       "      <td>0.148001</td>\n",
       "      <td>0.511905</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.545213</td>\n",
       "      <td>0.6</td>\n",
       "      <td>-0.054787</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>292</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.604651</td>\n",
       "      <td>0.451087</td>\n",
       "      <td>0.598809</td>\n",
       "      <td>0.321429</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.228723</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.071277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.423773</td>\n",
       "      <td>0.293478</td>\n",
       "      <td>0.333428</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.239362</td>\n",
       "      <td>0.4</td>\n",
       "      <td>-0.160638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.728682</td>\n",
       "      <td>0.592391</td>\n",
       "      <td>0.819110</td>\n",
       "      <td>0.327381</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.106383</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.106383</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>354</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.100775</td>\n",
       "      <td>0.157609</td>\n",
       "      <td>0.169266</td>\n",
       "      <td>0.380952</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.656915</td>\n",
       "      <td>0.7</td>\n",
       "      <td>-0.043085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.077519</td>\n",
       "      <td>0.076087</td>\n",
       "      <td>0.156223</td>\n",
       "      <td>0.839286</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.412234</td>\n",
       "      <td>0.5</td>\n",
       "      <td>-0.087766</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.134367</td>\n",
       "      <td>0.228261</td>\n",
       "      <td>0.381060</td>\n",
       "      <td>0.535714</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.372340</td>\n",
       "      <td>0.4</td>\n",
       "      <td>-0.027660</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>348</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.095607</td>\n",
       "      <td>0.152174</td>\n",
       "      <td>0.163595</td>\n",
       "      <td>0.369048</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.638298</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.038298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>369</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.173127</td>\n",
       "      <td>0.206522</td>\n",
       "      <td>0.258577</td>\n",
       "      <td>0.476190</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.531915</td>\n",
       "      <td>0.6</td>\n",
       "      <td>-0.068085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>298</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.095607</td>\n",
       "      <td>0.130435</td>\n",
       "      <td>0.152254</td>\n",
       "      <td>0.410714</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.678191</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.078191</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.728682</td>\n",
       "      <td>0.701087</td>\n",
       "      <td>0.705132</td>\n",
       "      <td>0.297619</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.106383</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.006383</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.056848</td>\n",
       "      <td>0.157609</td>\n",
       "      <td>0.145166</td>\n",
       "      <td>0.386905</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.505319</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.005319</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.423773</td>\n",
       "      <td>0.293478</td>\n",
       "      <td>0.365183</td>\n",
       "      <td>0.476190</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.265957</td>\n",
       "      <td>0.4</td>\n",
       "      <td>-0.134043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.857881</td>\n",
       "      <td>0.728261</td>\n",
       "      <td>0.739155</td>\n",
       "      <td>0.184524</td>\n",
       "      <td>0.583333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.186170</td>\n",
       "      <td>0.2</td>\n",
       "      <td>-0.013830</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.341085</td>\n",
       "      <td>0.211957</td>\n",
       "      <td>0.276155</td>\n",
       "      <td>0.476190</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.319149</td>\n",
       "      <td>0.3</td>\n",
       "      <td>0.019149</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.131783</td>\n",
       "      <td>0.277174</td>\n",
       "      <td>0.194783</td>\n",
       "      <td>0.398810</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.484043</td>\n",
       "      <td>0.6</td>\n",
       "      <td>-0.115957</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>138 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Cylinders  Engine_Disp  Horsepower    Weight  Accelerate      Year  \\\n",
       "81         0.2     0.074935    0.228261  0.138078    0.505952  0.166667   \n",
       "165        0.6     0.405685    0.266304  0.615821    0.654762  0.416667   \n",
       "351        0.2     0.043928    0.103261  0.102637    0.678571  0.916667   \n",
       "119        0.2     0.136951    0.358696  0.355826    0.446429  0.250000   \n",
       "379        0.2     0.113695    0.211957  0.272753    0.488095  1.000000   \n",
       "236        0.6     0.201550    0.277174  0.340800    0.386905  0.583333   \n",
       "78         0.2     0.136951    0.358696  0.374256    0.386905  0.166667   \n",
       "92         1.0     0.728682    0.538043  0.673377    0.297619  0.250000   \n",
       "80         0.0     0.005168    0.277174  0.203289    0.327381  0.166667   \n",
       "333        0.2     0.170543    0.239130  0.311313    0.446429  0.833333   \n",
       "278        0.6     0.423773    0.239130  0.468387    0.607143  0.750000   \n",
       "307        0.2     0.214470    0.239130  0.394103    0.720238  0.833333   \n",
       "283        1.0     0.612403    0.456522  0.631415    0.440476  0.750000   \n",
       "218        0.6     0.470284    0.347826  0.540686    0.500000  0.583333   \n",
       "366        0.2     0.113695    0.228261  0.291182    0.630952  1.000000   \n",
       "4          1.0     1.000000    0.972826  0.417635    0.119048  0.000000   \n",
       "385        0.2     0.059432    0.114130  0.099802    0.416667  1.000000   \n",
       "324        0.2     0.131783    0.250000  0.232776    0.416667  0.833333   \n",
       "6          1.0     0.617571    0.456522  0.536150    0.238095  0.000000   \n",
       "167        0.6     0.405685    0.266304  0.468103    0.476190  0.416667   \n",
       "146        0.2     0.134367    0.277174  0.248370    0.416667  0.333333   \n",
       "132        1.0     0.645995    0.565217  0.806351    0.327381  0.333333   \n",
       "120        0.2     0.103359    0.260870  0.217182    0.505952  0.250000   \n",
       "228        0.2     0.139535    0.271739  0.194783    0.446429  0.583333   \n",
       "5          1.0     0.728682    0.646739  0.589736    0.208333  0.000000   \n",
       "290        1.0     0.731266    0.521739  0.692090    0.375000  0.750000   \n",
       "214        0.2     0.111111    0.184783  0.153672    0.404762  0.583333   \n",
       "197        0.6     0.341085    0.190217  0.396654    0.571429  0.500000   \n",
       "162        0.2     0.186047    0.201087  0.290899    0.535714  0.416667   \n",
       "338        0.2     0.227390    0.250000  0.285512    0.380952  0.916667   \n",
       "..         ...          ...         ...       ...         ...       ...   \n",
       "39         0.6     0.470284    0.228261  0.432662    0.386905  0.083333   \n",
       "159        1.0     0.731266    0.554348  0.863056    0.327381  0.416667   \n",
       "301        0.2     0.059432    0.125000  0.146583    0.398810  0.750000   \n",
       "355        0.2     0.134367    0.152174  0.289765    0.613095  0.916667   \n",
       "345        0.2     0.173127    0.206522  0.248653    0.458333  0.916667   \n",
       "59         1.0     0.617571    0.456522  0.704565    0.357143  0.166667   \n",
       "12         1.0     0.754522    0.918478  0.851148    0.357143  0.000000   \n",
       "303        0.2     0.188630    0.135870  0.447122    1.000000  0.750000   \n",
       "163        0.6     0.266150    0.277174  0.388716    0.386905  0.416667   \n",
       "91         1.0     0.857881    0.565217  0.959456    0.357143  0.250000   \n",
       "332        0.2     0.054264    0.076087  0.100652    0.642857  0.833333   \n",
       "391        0.2     0.103359    0.130435  0.179189    0.529762  1.000000   \n",
       "388        0.2     0.059432    0.119565  0.116813    0.607143  1.000000   \n",
       "29         0.6     0.423773    0.293478  0.289481    0.297619  0.083333   \n",
       "273        0.2     0.077519    0.119565  0.148001    0.511905  0.666667   \n",
       "292        1.0     0.604651    0.451087  0.598809    0.321429  0.750000   \n",
       "85         0.6     0.423773    0.293478  0.333428    0.416667  0.250000   \n",
       "58         1.0     0.728682    0.592391  0.819110    0.327381  0.166667   \n",
       "354        0.2     0.100775    0.157609  0.169266    0.380952  0.916667   \n",
       "188        0.2     0.077519    0.076087  0.156223    0.839286  0.500000   \n",
       "171        0.2     0.134367    0.228261  0.381060    0.535714  0.416667   \n",
       "348        0.2     0.095607    0.152174  0.163595    0.369048  0.916667   \n",
       "369        0.2     0.173127    0.206522  0.258577    0.476190  1.000000   \n",
       "298        0.2     0.095607    0.130435  0.152254    0.410714  0.750000   \n",
       "88         1.0     0.728682    0.701087  0.705132    0.297619  0.250000   \n",
       "131        0.2     0.056848    0.157609  0.145166    0.386905  0.333333   \n",
       "124        0.6     0.423773    0.293478  0.365183    0.476190  0.333333   \n",
       "230        1.0     0.857881    0.728261  0.739155    0.184524  0.583333   \n",
       "14         0.6     0.341085    0.211957  0.276155    0.476190  0.000000   \n",
       "271        0.2     0.131783    0.277174  0.194783    0.398810  0.666667   \n",
       "\n",
       "     Origin  Actual_MPG  Predicted  Prediction_Error  \n",
       "81      1.0    0.478723        0.5         -0.021277  \n",
       "165     0.0    0.239362        0.2          0.039362  \n",
       "351     1.0    0.744681        0.7          0.044681  \n",
       "119     0.5    0.265957        0.3         -0.034043  \n",
       "379     0.0    0.585106        0.5          0.085106  \n",
       "236     1.0    0.345745        0.5         -0.154255  \n",
       "78      0.5    0.239362        0.3         -0.060638  \n",
       "92      0.0    0.106383        0.2         -0.093617  \n",
       "80      1.0    0.265957        0.4         -0.134043  \n",
       "333     1.0    0.553191        0.6         -0.046809  \n",
       "278     0.0    0.297872        0.4         -0.102128  \n",
       "307     0.0    0.406915        0.5         -0.093085  \n",
       "283     0.0    0.212766        0.3         -0.087234  \n",
       "218     0.0    0.226064        0.3         -0.073936  \n",
       "366     0.0    0.478723        0.5         -0.021277  \n",
       "4       0.0    0.132979        0.3         -0.167021  \n",
       "385     1.0    0.771277        0.7          0.071277  \n",
       "324     1.0    0.744681        0.6          0.144681  \n",
       "6       0.0    0.239362        0.2          0.039362  \n",
       "167     0.0    0.265957        0.3         -0.034043  \n",
       "146     1.0    0.398936        0.5         -0.101064  \n",
       "132     0.0    0.132979        0.1          0.032979  \n",
       "120     1.0    0.345745        0.5         -0.154255  \n",
       "228     0.0    0.438830        0.5         -0.061170  \n",
       "5       0.0    0.159574        0.2         -0.040426  \n",
       "290     0.0    0.172872        0.3         -0.127128  \n",
       "214     0.0    0.558511        0.5          0.058511  \n",
       "197     0.0    0.398936        0.4         -0.001064  \n",
       "162     0.0    0.372340        0.4         -0.027660  \n",
       "338     0.0    0.446809        0.5         -0.053191  \n",
       "..      ...         ...        ...               ...  \n",
       "39      0.0    0.239362        0.3         -0.060638  \n",
       "159     0.0    0.132979        0.1          0.032979  \n",
       "301     0.5    0.752660        0.6          0.152660  \n",
       "355     1.0    0.601064        0.6          0.001064  \n",
       "345     0.0    0.484043        0.5         -0.015957  \n",
       "59      0.0    0.106383        0.1          0.006383  \n",
       "12      0.0    0.026596       -0.0          0.026596  \n",
       "303     0.5    0.484043        0.4          0.084043  \n",
       "163     0.0    0.239362        0.3         -0.060638  \n",
       "91      0.0    0.053191        0.0          0.053191  \n",
       "332     1.0    0.773936        0.7          0.073936  \n",
       "391     1.0    0.664894        0.7         -0.035106  \n",
       "388     1.0    0.744681        0.7          0.044681  \n",
       "29      0.0    0.265957        0.4         -0.134043  \n",
       "273     1.0    0.545213        0.6         -0.054787  \n",
       "292     0.0    0.228723        0.3         -0.071277  \n",
       "85      0.0    0.239362        0.4         -0.160638  \n",
       "58      0.0    0.106383        0.0          0.106383  \n",
       "354     1.0    0.656915        0.7         -0.043085  \n",
       "188     0.0    0.412234        0.5         -0.087766  \n",
       "171     0.5    0.372340        0.4         -0.027660  \n",
       "348     0.5    0.638298        0.6          0.038298  \n",
       "369     0.0    0.531915        0.6         -0.068085  \n",
       "298     0.0    0.678191        0.6          0.078191  \n",
       "88      0.0    0.106383        0.1          0.006383  \n",
       "131     0.0    0.505319        0.5          0.005319  \n",
       "124     0.0    0.265957        0.4         -0.134043  \n",
       "230     0.0    0.186170        0.2         -0.013830  \n",
       "14      0.0    0.319149        0.3          0.019149  \n",
       "271     1.0    0.484043        0.6         -0.115957  \n",
       "\n",
       "[138 rows x 10 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Append Data\n",
    "fdf=pd.concat([test_x,test_y],1)\n",
    "fdf['Predicted']=np.round(predict_test,1)\n",
    "fdf['Prediction_Error']=fdf['Actual_MPG']-fdf['Predicted']\n",
    "fdf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cylinders</th>\n",
       "      <th>Engine_Disp</th>\n",
       "      <th>Horsepower</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Accelerate</th>\n",
       "      <th>Year</th>\n",
       "      <th>Origin</th>\n",
       "      <th>Actual_MPG</th>\n",
       "      <th>Predicted</th>\n",
       "      <th>Prediction_Error</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.074935</td>\n",
       "      <td>0.228261</td>\n",
       "      <td>0.138078</td>\n",
       "      <td>0.505952</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.478723</td>\n",
       "      <td>0.5</td>\n",
       "      <td>-0.021277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165</th>\n",
       "      <td>0.6</td>\n",
       "      <td>0.405685</td>\n",
       "      <td>0.266304</td>\n",
       "      <td>0.615821</td>\n",
       "      <td>0.654762</td>\n",
       "      <td>0.416667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.239362</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0.039362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>351</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.043928</td>\n",
       "      <td>0.103261</td>\n",
       "      <td>0.102637</td>\n",
       "      <td>0.678571</td>\n",
       "      <td>0.916667</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.744681</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0.044681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.136951</td>\n",
       "      <td>0.358696</td>\n",
       "      <td>0.355826</td>\n",
       "      <td>0.446429</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.265957</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-0.034043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>0.2</td>\n",
       "      <td>0.113695</td>\n",
       "      <td>0.211957</td>\n",
       "      <td>0.272753</td>\n",
       "      <td>0.488095</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.585106</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.085106</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Cylinders  Engine_Disp  Horsepower    Weight  Accelerate      Year  \\\n",
       "81         0.2     0.074935    0.228261  0.138078    0.505952  0.166667   \n",
       "165        0.6     0.405685    0.266304  0.615821    0.654762  0.416667   \n",
       "351        0.2     0.043928    0.103261  0.102637    0.678571  0.916667   \n",
       "119        0.2     0.136951    0.358696  0.355826    0.446429  0.250000   \n",
       "379        0.2     0.113695    0.211957  0.272753    0.488095  1.000000   \n",
       "\n",
       "     Origin  Actual_MPG  Predicted  Prediction_Error  \n",
       "81      1.0    0.478723        0.5         -0.021277  \n",
       "165     0.0    0.239362        0.2          0.039362  \n",
       "351     1.0    0.744681        0.7          0.044681  \n",
       "119     0.5    0.265957        0.3         -0.034043  \n",
       "379     0.0    0.585106        0.5          0.085106  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fdf.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1440 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.subplots(figsize=(20,20))\n",
    "plt.scatter(fdf.Actual_MPG,fdf.Prediction_Error,color='red')\n",
    "plt.xlabel('Actual MPG')\n",
    "plt.ylabel(\"Error\")\n",
    "plt.show();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ft_importances =pd.Series(lm.coef_,index=x.columns)\n",
    "ft_importances.plot(kind='barh')\n",
    "plt.show();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
